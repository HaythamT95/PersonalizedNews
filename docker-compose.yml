version: '3.8'

services:  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - network-dapr

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - network-dapr

  manager:
    build:
      context: manager
      dockerfile: Dockerfile
    container_name: manager
    ports:
      - "5555:5555"
    environment:
      - PORT_GATEWAY=5555
      - PORT_ACCESSOR=8080
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
      rabbitmq:
          condition: service_healthy
    networks:
      - network-dapr
    volumes:
      - ./manager/logs:/usr/src/app/logs
  
  manager-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "--app-port", "5555",
        "--app-id", "manager",
        "--app-protocol", "http",
        "--dapr-http-port", "3500",
        "--resources-path", "./dapr/components",
        "--config", "./dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - manager
    network_mode: "service:manager"

  accessor:
    build:
      context: accessor
      dockerfile: Dockerfile
    container_name: accessor
    ports:
      - "8080:8080"
    environment:
      - DATABASEURL=${DATABASEURL}
      - PORT_ACCESSOR=8080
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    depends_on:
        rabbitmq:
          condition: service_healthy
    networks:
      - network-dapr
    volumes:
      - ./accessor/logs:/usr/src/app/logs
    
  accessor-dapr:
    image: "daprio/daprd:edge"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: ["./daprd",
        "--app-port", "8080",
        "--app-id", "accessor",
        "--app-protocol", "http",
        "--dapr-http-port", "3500",
        "--resources-path", "./dapr/components",
        "--config", "./dapr/config.yaml"
        ]
    volumes:
      - "./dapr/:/dapr"
    depends_on:
      - accessor
    network_mode: "service:accessor"

volumes:
  mongo-data:

networks:
  network-dapr: